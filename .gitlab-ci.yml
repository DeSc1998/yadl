
stages:
  - build
  - unit-testing
  - interpretation-testing
  - run-testing

.default:
  rules:
    - if:  # $CI_PIPELINE_SOURCE == "schedule"
  script:
    - java -jar $YADL_JAR $ARG

default:
  variables:
    SCALA_VERSION: 3.4.1
    YADL_PATH: target/scala-$SCALA_VERSION
    YADL_JAR: $YADL_PATH/yadl.jar
  cache:
    key: build-cache
    paths:
      - $YADL_PATH

build:
  stage: build
  script:
    - sbt clean compile assembly
  rules:
    - !reference [.default, rules]
  timeout: 3 min

unit-tests:
  stage: unit-testing
  needs:
    - build
  script:
    - sbt test
  rules:
    - !reference [.default, rules]
  timeout: 5 min

simple-exprs:
  stage: interpretation-testing
  needs:
    - unit-tests
  script:
    - !reference [.default, script]
  variables:
    ARG: tests/simple.yadl
  rules:
    - !reference [.default, rules]
  timeout: 3 min

function-exprs:
  stage: interpretation-testing
  needs:
    - unit-tests
  script:
    - !reference [.default, script]
  variables:
    ARG: tests/function.yadl
  rules:
    - !reference [.default, rules]
  timeout: 3 min

if-branches-exprs:
  stage: interpretation-testing
  needs:
    - unit-tests
  script:
    - !reference [.default, script]
  variables:
    ARG: tests/if-branches.yadl
  rules:
    - !reference [.default, rules]
  timeout: 3 min

while-loop-exprs:
  stage: interpretation-testing
  needs:
    - unit-tests
  script:
    - !reference [.default, script]
  variables:
    ARG: tests/whileloop.yadl
  rules:
    - !reference [.default, rules]
  timeout: 3 min

python-test-script:
  stage: run-testing
  needs:
    - simple-exprs
    - function-exprs
    - if-branches-exprs
    - while-loop-exprs
  script:
    - pytest
  rules:
    - !reference [.default, rules]
  artefacts:
    paths:
      - $YADL_JAR
  timeout: 3 min

